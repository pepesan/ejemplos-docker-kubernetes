version: '3.8'
services:
  webserver:
    image: "nginx:1.19.2-alpine"
    container_name: "webserver-$ENV_STAGE"
    restart: unless-stopped
    depends_on:
      #- "app"
      - "mariadb"
    tty: true
    ports:
      - "$NGINX_HTTP_PORT:80"
      - "$NGINX_HTTPS_PORT:443"
    #user: "${UID}:${GID}"
    volumes:
      - ./src:/usr/share/nginx/html
      #- "./config/etc/group:/etc/group"
      #- "./config/nginx/app-$ENV_STAGE.conf:/etc/nginx/conf.d/default.conf"
      #- "./config/nginx/nginx.conf:/etc/nginx/nginx.conf"
      #- "./volumes-$ENV_STAGE/logs:/var/log/nginx"
    networks:
      - "app-network"

  #MySQL Service
  mariadb:
    image: "mariadb:$MARIADB_TAG"
    container_name: "mariadb-$ENV_STAGE"
    restart: unless-stopped
    tty: true
    ports:
      - "$MARIADB_PORT:3306"
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
    volumes:
      - "./volumes-$ENV_STAGE/mariadb/data:/var/lib/mysql/"
      #- "./config/mariadb/my-$ENV_STAGE.cnf:/etc/mysql/my.cnf"
      #- ./volumes/mariadb-tmp:/tmp
    healthcheck:
      test: "mysql --user=$MYSQL_USER --password=$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      - "app-network"
#Docker Networks
networks:
  "app-network":
    name: "app-network-$ENV_STAGE"
    driver: bridge


